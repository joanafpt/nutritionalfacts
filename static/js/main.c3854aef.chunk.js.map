{"version":3,"sources":["functions/functions.js","components/Modal.js","components/Select.js","constants/constants.js","components/Label.js","components/Button.js","components/ModalInfo.js","components/Form.js","components/Disclaimer.js","App.js","serviceWorker.js","index.js"],"names":["highStr","medStr","lowStr","f","sf","sg","st","functions","validateIfNumeric","str","maxVal","minVal","caughtVal","quantificatorWord","substr","indexOf","divided","split","length","numberPattern","y","match","push","Number","checkNutritionalValue","val","checkSaturFats","saturfatz","checkSugar","sugarval","checkSalt","saltval","checkNutritionalValueSolids","gordura","checkSaturFatsSolids","gordSat","checkSugarSolids","acuc","checkSaltSolids","sal","styles","buttonZero","backgroundColor","color","modalBackground","position","opacity","width","height","top","left","modal","zIndex","Modal","props","show","className","style","onClick","onClose","drinkForm","commonStringBeverage","commonString","validationOfFatSolids","validationOfSaturSolids","validationOfSugarSolids","validationOfSaltSolids","Select","React","forwardRef","ref","id","onChange","value","value1","children1","value2","children2","value3","children3","alimentos","bebidas","food","label1","label2","label3","label4","title","fat","satFat","sugar","salt","liq_fat","liq_satFat","liq_sugar","liq_salt","colTitle","Label","htmlFor","children","Button","type","ModalInfo","Form","validationOfFat","validationOfSatur","validationOfSugar","validationOfSalt","whichFormRef","useRef","fatRef","saturRef","sugarRef","saltyRef","useState","fatMaxFood","fatOption","setFatOption","satFatMaxFood","satFatOption","setSatFatOption","maxSugar","sugarOption","setSugarOption","maxSalt","saltOption","setSaltOption","fatBeb","setFatBeb","satFatBeb","setSatFatBeb","sugarOptionBeb","setSugarOptionBeb","saltOptionBeb","setSaltOptionBeb","activate","setActivate","stroutp","setStrOutp","stringDrinkOutput","setStringDrinkOutput","fOutp","setFOutp","satfOutp","setSatFOutp","sugOutp","setSugFOutp","salOutp","setSalFOutp","formIsFood","setFormIsFood","formIsDrink","setFormIsDrink","out","toggle","useEffect","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","target","handleChange","innerText","startsWith","label","fatMediumFood","fatMinFood","satFatMediumFood","satFatMinFood","mediumSugar","minSugar","mediumSalt","minSalt","preventDefault","valorRetornado","arrayComValoresRetornados","possibilities","x","foodForm","Disclaimer","href","rel","App","marginTop","paddingTop","paddingBottom","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c3854aef.chunk.js","sourcesContent":["\r\nconst validateIfNumeric = (str) => {\r\n    var plusWord = 'Mais';\r\n    var minusWord = 'Até';\r\n    var maxVal, medMinVal, medMaxVal, minVal;\r\n    var caughtVal = [];\r\n    var quantificatorWord = str.substr(0, str.indexOf(' '));\r\n    var divided = str.split(' ', str.length);\r\n    var numberPattern = /\\d+/g;\r\n    for (var y = 0; y < divided.length; y++) {\r\n        if (divided[y].match(numberPattern)) {\r\n            caughtVal.push(divided[y]);\r\n        }\r\n    }\r\n    if (quantificatorWord === plusWord) {\r\n        maxVal = caughtVal[0];\r\n        maxVal = Number(maxVal);\r\n        return maxVal;\r\n    } else if (quantificatorWord === minusWord) {\r\n        minVal = caughtVal[0];\r\n        minVal = Number(minVal);\r\n        return minVal;\r\n    } else {\r\n        medMinVal = caughtVal[0];\r\n        medMaxVal = caughtVal[1];\r\n        return [medMinVal, medMaxVal];\r\n    }\r\n}\r\n\r\nvar highStr = 'Teor alto de ';\r\nvar medStr = 'Teor médio de ';\r\nvar lowStr = 'Teor baixo de '\r\nvar f = 'gordura.';\r\nvar sf = 'gordura saturada.';\r\nvar sg = 'açúcar.';\r\nvar st = 'sal.';\r\nvar fatOutput = '';\r\nvar satFatOut = '';\r\nvar sugarOut = '';\r\nvar saltOut = '';\r\n\r\nconst checkNutritionalValue = (val) => {\r\n    if (val >= 8.75) {\r\n        fatOutput = highStr + f;\r\n        return fatOutput;\r\n    } else if (val <= 1.5) {\r\n        fatOutput = lowStr + f;\r\n        return fatOutput;\r\n    } else {\r\n        fatOutput = medStr + f;\r\n        return fatOutput;\r\n    }\r\n}\r\n\r\nconst checkSaturFats = (saturfatz) => {\r\n    if (saturfatz >= 2.5) {\r\n        satFatOut = highStr + sf;\r\n        return satFatOut;\r\n    } else if (saturfatz <= 0.75) {\r\n        satFatOut = lowStr + sf;\r\n        return satFatOut;\r\n    } else {\r\n        satFatOut = medStr + sf;\r\n        return satFatOut;\r\n    }\r\n}\r\nconst checkSugar = (sugarval) => {\r\n    if (sugarval >= 11.25) {\r\n        sugarOut = highStr + sg;\r\n        return sugarOut;\r\n    } else if (sugarval <= 2.5) {\r\n        sugarOut = lowStr + sg;\r\n        return sugarOut;\r\n    } else {\r\n        sugarOut = medStr + sg;\r\n        return sugarOut;\r\n    }\r\n}\r\n\r\nconst checkSalt = (saltval) => {\r\n    if (saltval >= 0.75) {\r\n        saltOut = highStr + st;\r\n        return saltOut;\r\n    } else if (saltval <= 0.3) {\r\n        saltOut = lowStr + st;\r\n        return saltOut;\r\n    } else {\r\n        saltOut = medStr + st;\r\n        return saltOut;\r\n    }\r\n}\r\n\r\nconst checkNutritionalValueSolids = (gordura) => {\r\n    if (gordura > 17.4) {\r\n        fatOutput = highStr + f;\r\n        return fatOutput;\r\n    }\r\n    else if (gordura <= 3) {\r\n        fatOutput = lowStr + f;\r\n        return fatOutput;\r\n    }\r\n    else {\r\n        fatOutput = medStr + f;\r\n        return fatOutput;\r\n    }\r\n}\r\nconst checkSaturFatsSolids = (gordSat) => {\r\n    if (gordSat >= 5) {\r\n        satFatOut = highStr + sf;\r\n        return satFatOut;\r\n    }\r\n    else if (gordSat <= 1.5) {\r\n        satFatOut = lowStr + sf;\r\n        return satFatOut;\r\n    }\r\n    else {\r\n        satFatOut = medStr + sf;\r\n        return satFatOut;\r\n    }\r\n\r\n}\r\nconst checkSugarSolids = (acuc) => {\r\n    if (acuc >= 22.5) {\r\n        sugarOut = highStr + sg;\r\n        return sugarOut;\r\n    }\r\n    else if (acuc <= 5) {\r\n        sugarOut = lowStr + sg;\r\n        return sugarOut;\r\n    }\r\n    else {\r\n        sugarOut = medStr + sg;\r\n        return sugarOut;\r\n    }\r\n}\r\nconst checkSaltSolids = (sal) => {\r\n    if (sal > 1.4) {\r\n        saltOut = highStr + st;\r\n        return saltOut;\r\n    }\r\n    else if (sal <= 0.3) {\r\n        saltOut = lowStr + st;\r\n        return saltOut;\r\n    }\r\n    else {\r\n        saltOut = medStr + st;\r\n        return saltOut;\r\n    }\r\n}\r\n\r\n\r\n\r\nconst functions = {\r\n    validateIfNumeric: validateIfNumeric,\r\n    checkNutritionalValue: checkNutritionalValue,\r\n    checkSaturFats: checkSaturFats,\r\n    checkSugar: checkSugar,\r\n    checkSalt: checkSalt,\r\n    checkNutritionalValueSolids: checkNutritionalValueSolids,\r\n    checkSaturFatsSolids: checkSaturFatsSolids,\r\n    checkSugarSolids: checkSugarSolids,\r\n    checkSaltSolids: checkSaltSolids,\r\n}\r\n\r\nexport default functions;","import React from \"react\";\r\nimport \"./Modal.css\";\r\nimport { IoMdClose } from \"react-icons/io\";\r\n\r\nconst Modal = (props) => {\r\n  if (!props.show) {\r\n    return null;\r\n  }\r\n  // console.log(\"PROPS MODAL ANTIGO\", props);\r\n  return (\r\n    <div className=\"modal1\" style={styles.modal}>\r\n      <div\r\n        className=\"modal-background\"\r\n        style={styles.modalBackground}\r\n        onClick={props.onClose}\r\n      />\r\n      <div className=\"backdrop\">\r\n        <div className=\"row\">\r\n          <div className=\"col col-12\">\r\n            <button\r\n              className=\"btn btn-default float-right shadow-none\"\r\n              style={styles.buttonZero}\r\n              onClick={props.onClose}\r\n            >\r\n              <IoMdClose />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"output-description\">\r\n          <div className=\"title-popup\">\r\n            {props.drinkForm ? props.commonStringBeverage : props.commonString}\r\n          </div>\r\n          <div className=\"nutri-eval\">\r\n            <ul>{props.validationOfFatSolids}</ul>\r\n            <ul> {props.validationOfSaturSolids}</ul>\r\n            <ul>{props.validationOfSugarSolids}</ul>\r\n            <ul>{props.validationOfSaltSolids}</ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  buttonZero: {\r\n    backgroundColor: \"transparent\",\r\n    color: \"black\",\r\n  },\r\n  modalBackground: {\r\n    position: \"fixed\",\r\n    backgroundColor: \"black\",\r\n    opacity: 0.5,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    top: 0,\r\n    left: 0,\r\n  },\r\n  modal: {\r\n    zIndex: 1,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"fixed\",\r\n  },\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\n\r\nexport const Select = React.forwardRef((props, ref) => (\r\n\r\n\r\n\r\n  <select\r\n    className=\"form-control mb-1\"\r\n    id={props.id}\r\n    onChange={props.onChange}\r\n    ref={ref}\r\n  >\r\n    <option className=\"opt\" value={props.value1}>\r\n      {props.children1}\r\n    </option>\r\n    <option className=\"opt\" value={props.value2}>\r\n      {props.children2}\r\n    </option>\r\n    <option className=\"opt\" value={props.value3}>\r\n      {props.children3}\r\n    </option>\r\n  </select>\r\n\r\n\r\n\r\n\r\n));\r\n\r\nconst ref = React.createRef();\r\n<Select ref={ref} />;\r\n","export const alimentos = \"ALIMENTOS\";\r\nexport const bebidas = \"BEBIDAS\";\r\n\r\nexport const food = {\r\n  label1: \"Gordura\",\r\n  label2: \"Gordura Saturada\",\r\n  label3: \"Açúcar\",\r\n  label4: \"Sal\",\r\n};\r\nexport const title = { labelBeberage: \"por 100 ml.\", labelFood: \"por 100 gr.\" };\r\n\r\n//sólidos :\r\nexport const fat = {\r\n  fatMaxFood: \"Mais de 17.5 gr.\",\r\n  fatMediumFood: \"Entre 3 gr. e 17.5 gr.\",\r\n  fatMinFood: \"Até 3 gr.\",\r\n};\r\nexport const satFat = {\r\n  satFatMaxFood: \"Mais de 5 gr.\",\r\n  satFatMediumFood: \"Entre 1.5 gr. e 5 gr.\",\r\n  satFatMinFood: \"Até 1.5 gr.\",\r\n};\r\nexport const sugar = {\r\n  maxSugar: \"Mais de 22.5 gr.\",\r\n  mediumSugar: \"Entre 5 gr. e 22.5 gr.\",\r\n  minSugar: \"Até 5 gr.\",\r\n};\r\nexport const salt = {\r\n  maxSalt: \"Mais de 1.5 gr.\",\r\n  mediumSalt: \"Entre 0.3 gr. e 1.5 gr.\",\r\n  minSalt: \"Até 0.3 gr.\",\r\n};\r\n\r\n//liquidos\r\n\r\nexport const liq_fat = {\r\n  fatMaxFood: \"Mais de 8.75 gr.\",\r\n  fatMediumFood: \"Entre 1.5 gr. e 8,75 gr. \",\r\n  fatMinFood: \"Até 1.5 gr.\",\r\n};\r\nexport const liq_satFat = {\r\n  satFatMaxFood: \"Mais de 2.5 gr.\",\r\n  satFatMediumFood: \"Entre 0.75 gr. e 2.5 gr.\",\r\n  satFatMinFood: \"Até 0.75 gr.\",\r\n};\r\nexport const liq_sugar = {\r\n  maxSugar: \"Mais de 11.25 gr.\",\r\n  mediumSugar: \"Entre 2.5 gr. e 11.25 gr.\",\r\n  minSugar: \"Até 2.5 gr.\",\r\n};\r\nexport const liq_salt = {\r\n  maxSalt: \"Mais de 0.75 gr.\",\r\n  mediumSalt: \"Entre 0.3 gr. e 0.75 gr.\",\r\n  minSalt: \"Até 0.3 gr.\",\r\n};\r\n\r\nexport const colTitle = { title: \"ALIMENTOS\", title2: \"BEBIDAS\" };\r\n","import React from \"react\";\r\n\r\nfunction Label(props) {\r\n  //   console.log(props);\r\n  return (\r\n    <label htmlFor={props.htmlFor} className={props.className}>\r\n      {props.children}\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <div className=\"col text-center mt-1 mb-5\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary submit\"\r\n        onClick={props.onClick}\r\n        data-toggle=\"modal\"\r\n        data-target=\"#exampleModal\"\r\n      >\r\n        ENVIAR\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport ModalHeader from \"./ModalHeader\";\r\n\r\nfunction ModalInfo(props) {\r\n  console.log(\"MODALÇINFO PROPS\", props);\r\n\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"exampleModal\"\r\n      tabindex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n          <ModalHeader>\r\n            {props.drinkForm ? props.commonStringBeverage : props.commonString}\r\n          </ModalHeader>\r\n\r\n          <div className=\"modal-body\">\r\n            <ul>{props.valfat}</ul>\r\n            <ul> {props.valsat}</ul>\r\n            <ul>{props.valsugar}</ul>\r\n            <ul>{props.valsalt}</ul>\r\n          </div>\r\n          <div className=\"modal-footer\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalInfo;\r\n","import React, { useState, useRef, useEffect, Fragment } from \"react\";\r\nimport \"./Form.css\";\r\nimport functions from \"../functions/functions\";\r\nimport Modal from \"./Modal\";\r\nimport { Select } from \"./Select\";\r\nimport { alimentos, bebidas } from \"../constants/constants\";\r\nimport Label from \"./Label\";\r\nimport Button from \"./Button\";\r\nimport ModalInfo from \"./ModalInfo\";\r\nconst Form = (props) => {\r\n  // console.log(props, \" props form\");\r\n  var validationOfFatSolids,\r\n    validationOfSaturSolids,\r\n    validationOfSugarSolids,\r\n    validationOfSaltSolids;\r\n  var validationOfFat, validationOfSatur, validationOfSugar, validationOfSalt;\r\n\r\n  const whichFormRef = useRef();\r\n  const fatRef = useRef(); // ref select fat\r\n  const saturRef = useRef(); // ref select satfat\r\n  const sugarRef = useRef(); // ref select sugar\r\n  const saltyRef = useRef(); // ref select salt\r\n\r\n  //solid food states\r\n  const [fatOption, setFatOption] = useState(props.fatMaxFood);\r\n  const [satFatOption, setSatFatOption] = useState(props.satFatMaxFood);\r\n  const [sugarOption, setSugarOption] = useState(props.maxSugar);\r\n  const [saltOption, setSaltOption] = useState(props.maxSalt);\r\n\r\n  //liquid food states\r\n  const [fatBeb, setFatBeb] = useState(props.fatMaxFood);\r\n  const [satFatBeb, setSatFatBeb] = useState(props.satFatMaxFood);\r\n  const [sugarOptionBeb, setSugarOptionBeb] = useState(props.maxSugar);\r\n  const [saltOptionBeb, setSaltOptionBeb] = useState(props.maxSalt);\r\n\r\n  const [activate, setActivate] = useState(false);\r\n  const [stroutp, setStrOutp] = useState(\"\"); //string do outp\r\n  const [stringDrinkOutput, setStringDrinkOutput] = useState(\"\"); //output\r\n  const [fOutp, setFOutp] = useState(\"\"); //output\r\n  const [satfOutp, setSatFOutp] = useState(\"\"); //output\r\n  const [sugOutp, setSugFOutp] = useState(\"\"); //output\r\n  const [salOutp, setSalFOutp] = useState(\"\"); //output\r\n  const [formIsFood, setFormIsFood] = useState(false);\r\n  const [formIsDrink, setFormIsDrink] = useState(false);\r\n\r\n  const out = useRef();\r\n  const toggle = () => {\r\n    activate ? setActivate(false) : setActivate(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (out.current && !out.current.contains(event.target)) {\r\n      setActivate(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = () => {\r\n    if (whichFormRef.current.innerText.startsWith(alimentos)) {\r\n      setFatOption(fatRef.current.value);\r\n      setSatFatOption(saturRef.current.value);\r\n      setSugarOption(sugarRef.current.value);\r\n      setSaltOption(saltyRef.current.value);\r\n    } else if (whichFormRef.current.innerText.startsWith(bebidas)) {\r\n      setFatBeb(fatRef.current.value);\r\n      setSatFatBeb(saturRef.current.value);\r\n      setSugarOptionBeb(sugarRef.current.value);\r\n      setSaltOptionBeb(saltyRef.current.value);\r\n    }\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    var arrayComValoresRetornados = [];\r\n    var valorRetornado;\r\n    var gordura;\r\n    var gordSat;\r\n    var acuc;\r\n    var sal;\r\n    var possibilities = [];\r\n\r\n    if (whichFormRef.current.innerText.startsWith(bebidas)) {\r\n      possibilities = [fatBeb, satFatBeb, sugarOptionBeb, saltOptionBeb];\r\n      for (var x = 0; x < possibilities.length; x++) {\r\n        valorRetornado = functions.validateIfNumeric(possibilities[x]);\r\n        arrayComValoresRetornados.push(valorRetornado);\r\n      }\r\n      //for legibility purposes only:\r\n      gordura = arrayComValoresRetornados[0];\r\n      gordSat = arrayComValoresRetornados[1];\r\n      acuc = arrayComValoresRetornados[2];\r\n      sal = arrayComValoresRetornados[3];\r\n\r\n      validationOfFat = functions.checkNutritionalValue(gordura);\r\n      validationOfSatur = functions.checkSaturFats(gordSat);\r\n      validationOfSugar = functions.checkSugar(acuc); //aqui\r\n      validationOfSalt = functions.checkSalt(sal); //aqui\r\n\r\n      setStringDrinkOutput(\"A bebida selecionada possui: \");\r\n      setFOutp(validationOfFat);\r\n      setSatFOutp(validationOfSatur);\r\n      setSugFOutp(validationOfSugar);\r\n      setSalFOutp(validationOfSalt);\r\n      setFormIsFood(false);\r\n      setFormIsDrink(true);\r\n    } else if (whichFormRef.current.innerText.startsWith(alimentos)) {\r\n      possibilities = [fatOption, satFatOption, sugarOption, saltOption];\r\n      for (var y = 0; y < possibilities.length; y++) {\r\n        valorRetornado = functions.validateIfNumeric(possibilities[y]);\r\n        arrayComValoresRetornados.push(valorRetornado);\r\n      }\r\n      //for legibility purposes only:\r\n      gordura = arrayComValoresRetornados[0];\r\n      gordSat = arrayComValoresRetornados[1];\r\n      acuc = arrayComValoresRetornados[2];\r\n      sal = arrayComValoresRetornados[3];\r\n\r\n      validationOfFatSolids = functions.checkNutritionalValueSolids(gordura);\r\n      validationOfSaturSolids = functions.checkSaturFatsSolids(gordSat);\r\n      validationOfSugarSolids = functions.checkSugarSolids(acuc); //aqui\r\n      validationOfSaltSolids = functions.checkSaltSolids(sal); //aqui\r\n\r\n      setStrOutp(\"O alimento selecionado possui: \");\r\n      setFOutp(validationOfFatSolids);\r\n      setSatFOutp(validationOfSaturSolids);\r\n      setSugFOutp(validationOfSugarSolids);\r\n      setSalFOutp(validationOfSaltSolids);\r\n\r\n      setFormIsFood(true);\r\n      setFormIsDrink(false);\r\n    }\r\n    toggle();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\" ref={out}>\r\n      <form ref={whichFormRef}>\r\n        <p className=\"form-header\">\r\n          {\" \"}\r\n          {props.colTitle} {props.title}{\" \"}\r\n        </p>\r\n        <div className=\"row\"></div>\r\n        <div className=\"row\">\r\n          <Label htmlFor=\"fat\" className=\"label-select\">\r\n            {props.label.label1}\r\n          </Label>\r\n          <Select\r\n            id=\"fat\"\r\n            onChange={handleChange}\r\n            ref={fatRef}\r\n            value1={props.fatMaxFood}\r\n            value2={props.fatMediumFood}\r\n            value3={props.fatMinFood}\r\n            children1={props.fatMaxFood}\r\n            children2={props.fatMediumFood}\r\n            children3={props.fatMinFood}\r\n          />\r\n\r\n          <Label htmlFor=\"saturatedFat\" className=\"label-select\">\r\n            {\" \"}\r\n            {props.label.label2}\r\n          </Label>\r\n          <Select\r\n            className=\"form-control\"\r\n            id=\"saturatedFat\"\r\n            onChange={handleChange}\r\n            ref={saturRef}\r\n            value1={props.satFatMaxFood}\r\n            value2={props.satFatMediumFood}\r\n            value3={props.satFatMinFood}\r\n            children1={props.satFatMaxFood}\r\n            children2={props.satFatMediumFood}\r\n            children3={props.satFatMinFood}\r\n          />\r\n\r\n          <Label htmlFor=\"sugar\" className=\"label-select\">\r\n            {props.label.label3}{\" \"}\r\n          </Label>\r\n          <Select\r\n            className=\"form-control\"\r\n            id=\"sugar\"\r\n            onChange={handleChange}\r\n            ref={sugarRef}\r\n            value1={props.maxSugar}\r\n            value2={props.mediumSugar}\r\n            value3={props.minSugar}\r\n            children1={props.maxSugar}\r\n            children2={props.mediumSugar}\r\n            children3={props.minSugar}\r\n          />\r\n\r\n          <Label htmlFor=\"salt\" className=\"label-select\">\r\n            {\" \"}\r\n            {props.label.label4}\r\n          </Label>\r\n          <Select\r\n            className=\"form-control\"\r\n            id=\"salt\"\r\n            onChange={handleChange}\r\n            ref={saltyRef}\r\n            value1={props.maxSalt}\r\n            value2={props.mediumSalt}\r\n            value3={props.minSalt}\r\n            children1={props.maxSalt}\r\n            children2={props.mediumSalt}\r\n            children3={props.minSalt}\r\n          />\r\n\r\n          <Button\r\n            onClick={handleSubmit}\r\n            // type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            data-toggle=\"modal\"\r\n            data-target=\"#exampleModal\"\r\n          />\r\n        </div>\r\n      </form>\r\n      <Modal\r\n        show={activate}\r\n        onClose={toggle}\r\n        commonString={stroutp}\r\n        commonStringBeverage={stringDrinkOutput}\r\n        validationOfFatSolids={fOutp}\r\n        validationOfSaturSolids={satfOutp}\r\n        validationOfSugarSolids={sugOutp}\r\n        validationOfSaltSolids={salOutp}\r\n        foodForm={formIsFood}\r\n        drinkForm={formIsDrink}\r\n      />\r\n\r\n      {/* <ModalInfo\r\n        commonString={stroutp}\r\n        commonStringBeverage={stringDrinkOutput}\r\n        valfat={fOutp}\r\n        valsat={satfOutp}\r\n        valsugar={sugOutp}\r\n        valsalt={salOutp}\r\n        foodForm={formIsFood}\r\n        drinkForm={formIsDrink}\r\n      \r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nexport default function Disclaimer() {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col\">\r\n        Este projeto foi desenvolvido como forma de aprendizagem e por interesse\r\n        pessoal, e não substitui a opinião de um profissional de nutrição.\r\n        FONTE:\r\n        <a\r\n          href=\"https://nutrimento.pt/activeapp/wp-content/uploads/2015/11/Descodificador-de-rotulos-A4.pdf\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {\" \"}\r\n          Blog Nutrimento\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\nThis project was developed by me as a way of learning and by personal\r\n        interest and does not replace a professional opinion. SOURCE:\r\n\r\n*/\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport Disclaimer from \"./components/Disclaimer\";\nimport {\n  food,\n  title,\n  fat,\n  satFat,\n  sugar,\n  salt,\n  liq_fat,\n  liq_satFat,\n  liq_sugar,\n  liq_salt,\n  colTitle,\n} from \"./constants/constants\";\n\nfunction App() {\n  return (\n    <div\n      className=\"container\"\n      style={{\n        backgroundColor: \"transparent\",\n        marginTop: \"12vh\",\n        paddingTop: \"2vh\",\n        paddingBottom: \"2vh\",\n      }}\n    >\n      <div className=\"row\">\n        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 header-page\">\n            Descodificador nutricional         \n          </div>\n\n        <div className=\"col-xs-12 col-md-4 offset-md-2\">\n          <Form\n            label={food}\n            title={title.labelFood}\n            colTitle={colTitle.title}\n            className=\"formFood\"\n            fatMaxFood={fat.fatMaxFood}\n            fatMediumFood={fat.fatMediumFood}\n            fatMinFood={fat.fatMinFood}\n            satFatMaxFood={satFat.satFatMaxFood}\n            satFatMediumFood={satFat.satFatMediumFood}\n            satFatMinFood={satFat.satFatMinFood}\n            maxSugar={sugar.maxSugar}\n            mediumSugar={sugar.mediumSugar}\n            minSugar={sugar.minSugar}\n            maxSalt={salt.maxSalt}\n            mediumSalt={salt.mediumSalt}\n            minSalt={salt.minSalt}\n          />\n        </div>\n        <div className=\"col-xs-12 col-md-4 offset-md-0\">\n          <Form\n            label={food}\n            title={title.labelBeberage}\n            colTitle={colTitle.title2}\n            className=\"formDrink\"\n            fatMaxFood={liq_fat.fatMaxFood}\n            fatMediumFood={liq_fat.fatMediumFood}\n            fatMinFood={liq_fat.fatMinFood}\n            satFatMaxFood={liq_satFat.satFatMaxFood}\n            satFatMediumFood={liq_satFat.satFatMediumFood}\n            satFatMinFood={liq_satFat.satFatMinFood}\n            maxSugar={liq_sugar.maxSugar}\n            mediumSugar={liq_sugar.mediumSugar}\n            minSugar={liq_sugar.minSugar}\n            maxSalt={liq_salt.maxSalt}\n            mediumSalt={liq_salt.mediumSalt}\n            minSalt={liq_salt.minSalt}\n          />\n        </div>\n      </div>\n\n      <Disclaimer />\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}